[{"name":"app.R","content":"library(shiny)\r\nlibrary(htmltools)\r\nlibrary(shinyWidgets)\r\nlibrary(dplyr)\r\n\r\n# Define UI for app that draws a histogram ----\r\nui <- fluidPage(\r\n\r\n  titlePanel(\"30 Day Chart Challenge\"),\r\n  sidebarLayout(\r\n    sidebarPanel(\r\n      markdown(\r\n        \"The 30 Day Chart Challenge encourages to create a data visualization based on a daily prompt throughout the month of April. There are 5 major categories, namely, comparisons, distributions, relationships, timeseries, and uncertainties. My contributions to this challenge are available on [GitHub](https://github.com/SaranjeetKaur/30day_chart_challenge).\"\r\n      ),\r\n      htmltools::hr(),\r\n      shinyWidgets::pickerInput(\r\n        inputId = \"year_select\",\r\n        \"Choose a year:\",\r\n        choices = c(2025)\r\n      ),\r\n    )\r\n  )\r\n)\r\n    \r\n      \r\n      ","type":"text"},{"name":"DESCRIPTION","content":"Title: Hello Shiny!\r\nAuthor: RStudio, Inc.\r\nAuthorUrl: http://www.rstudio.com/\r\nLicense: MIT\r\nDisplayMode: Showcase\r\nTags: getting-started\r\nType: Shiny\r\n","type":"text"},{"name":"Readme.md","content":"This small Shiny application demonstrates Shiny's automatic UI updates. \r\n\r\nMove the *Number of bins* slider and notice how the `renderPlot` expression is automatically re-evaluated when its dependant, `input$bins`, changes, causing a histogram with a new number of bins to be rendered.\r\n","type":"text"}]
